{
  "Description" : "This is a sample template for lambda-backed custom resource. Runtime for Lambda function is python",
  "Transform": "AWS::Serverless-2016-10-31",
  "Parameters" : {
    "SNSEmail" : {
      "Type" : "String",
      "Default" : "youremail@email.com"
    },
    "CircuitName" : {
      "Type" : "String",
      "Default" : "Kumo Torakku"
    }
  },
  "Resources":{
    "BadImageSNSTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "Subscription" :  [{
          "Endpoint" : { "Ref" : "SNSEmail"},
          "Protocol" : "email"
        }]
      }
    },
    "S3BucketForResult" : {
      "Type" : "AWS::S3::Bucket"
    },
    "S3BucketForImage" : {
      "Type" : "AWS::S3::Bucket"
    },
    "DeepRacerFunction" : {
      "Type" : "AWS::Serverless::Function",
      "DependsOn" : "BadImageSNSTopic",
      "Properties" : {
        "Handler" : "lambda_function.lambda_handler",
        "Role" : {"Fn::GetAtt" : ["TestLambdaExecutionRole", "Arn"]},
        "CodeUri" : "s3://raj-saha-website-code/lambda_function.zip",
        "Timeout" : 10,
        "Runtime" : "python3.7",
        "Events" : {
          "PutImageEvent":{
            "Type" : "S3",
            "Properties" : {
              "Bucket" : {"Ref" : "S3BucketForImage"},
              "Events" : "s3:ObjectCreated:*"
            }
          }
        },
        "Environment" : {
          "Variables" : {"bad_image_sns":{"Ref": "BadImageSNSTopic"},
                         "circuit_name" : {"Ref" : "CircuitName"},
                         "s3_result_bucket" : {"Ref" : "S3BucketForResult"}
                        }
        }
      }
    },
    "TestLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "cwlogs",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "textract:*",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "sns:*",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "logs:CreateLogGroup",
                  "Resource": { "Fn::Join" : [":", ["arn:aws:logs", { "Ref" : "AWS::Region" }, { "Ref" : "AWS::AccountId" }, "*" ]] }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    { "Fn::Join" : [":", ["arn:aws:logs", { "Ref" : "AWS::Region" }, { "Ref" : "AWS::AccountId" }, "log-group", "/aws/lambda/*", "*" ]] }
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs" : {
    "S3ImageBucket" : {
      "Value" : { "Ref":"S3BucketForImage"}
    },
    "S3ResultBucket" : {
      "Value" : { "Ref":"S3BucketForResult"}
    }
  }
}